<?xml version="1.0" encoding="UTF-8"?>

<!--
   The bootstrap of the server. This should only have the minimum
   needed to bootstrap the mc kernel and profile service.
   $Id:$
-->
<deployment xmlns="urn:jboss:bean-deployer:2.0">

   <!-- All beans use the bootstrap classloader -->
   <classloader><inject bean="BootstrapClassLoader"/></classloader>

   <!-- TODO Should split this file up and use the new classloader -->
   <bean name="BootstrapClassLoader" class="org.jboss.system.NoAnnotationURLClassLoader">
      <classloader><null/></classloader>
      <constructor factoryClass="org.jboss.system.NoAnnotationURLClassLoader" factoryMethod="createClassLoader">
        <parameter>
           <array elementClass="java.net.URL">
              <!-- VFS -->
              <value>${jboss.lib.url}/jboss-vfs.jar</value>
              <!-- ClassLoader -->
              <value>${jboss.lib.url}/jboss-classloading-spi.jar</value>
              <value>${jboss.lib.url}/jboss-classloader.jar</value>
              <value>${jboss.lib.url}/osgi.core.jar</value>
              <!-- Deployers -->
              <value>${jboss.lib.url}/jboss-metatype.jar</value>
              <value>${jboss.lib.url}/jboss-managed.jar</value>
              <value>${jboss.lib.url}/jboss-deployers-core-spi.jar</value>
              <value>${jboss.lib.url}/jboss-deployers-core.jar</value>
              <value>${jboss.lib.url}/jboss-deployers-client-spi.jar</value>
              <value>${jboss.lib.url}/jboss-deployers-client.jar</value>
              <value>${jboss.lib.url}/jboss-deployers-structure-spi.jar</value>
              <value>${jboss.lib.url}/jboss-deployers-spi.jar</value>
              <value>${jboss.lib.url}/jboss-deployers-impl.jar</value>
              <value>${jboss.lib.url}/jboss-deployers-vfs-spi.jar</value>
              <value>${jboss.lib.url}/jboss-deployers-vfs.jar</value>
              <!-- System -->
              <value>${jboss.lib.url}/jboss-system.jar</value>
              <!-- JMX -->
              <value>${jboss.lib.url}/jboss-j2se.jar</value>
              <value>${jboss.lib.url}/jboss-mbeans.jar</value>
              <value>${jboss.lib.url}/jboss-jmx.jar</value>
              <value>${jboss.lib.url}/jboss-system-jmx.jar</value>
              <value>${jboss.lib.url}/dom4j.jar</value>
              <!-- AOP -->
              <value>${jboss.lib.url}/jboss-aop-jdk50.jar</value>
              <value>${jboss.lib.url}/jboss-aop-deployer-jdk50.jar</value>
              <value>${jboss.lib.url}/jboss-aop-mc-int.jar</value>
              <!-- Kill once we use the new classloaders -->
              <value>${jboss.lib.url}/jboss-aop-jboss4-jdk50.jar</value>
              <value>${jboss.lib.url}/jboss-aop-jboss5.jar</value>
              <value>${jboss.lib.url}/trove.jar</value>
              <!-- JAXB - shouldn't this be in endorsed? -->
              <value>${jboss.lib.url}/activation.jar</value>
              <value>${jboss.lib.url}/jaxb-api.jar</value>
              <value>${jboss.lib.url}/jaxb-impl.jar</value>
              <value>${jboss.lib.url}/stax-api.jar</value>
              <value>${jboss.lib.url}/wstx.jar</value>
           </array>
        </parameter>
      </constructor>
   </bean>

   <!-- FIXME REMOVE THIS -->
   <bean name="AOPMCFIX" class="org.jboss.aop.deployers.temp.Hack">
      <constructor>
         <parameter><inject bean="jboss.kernel:service=Kernel"/></parameter>
      </constructor>
   </bean>

   <!-- The basic profile service which relies on vfs scanners
   to determine the profile deployments. This version does not
   support the full ProfileService spi.
   -->
   <bean name="ProfileService" class="org.jboss.system.server.profileservice.basic.ProfileServiceImpl">
      <constructor>
         <parameter>${jboss.server.name}</parameter>
      </constructor>
      <property name="profileRoot">${jboss.server.home.dir}</property>
   </bean>

   <bean name="ProfileServiceBootstrap" class="org.jboss.system.server.profileservice.ProfileServiceBootstrap">
      <property name="kernel"><inject bean="jboss.kernel:service=Kernel"/></property>
   </bean>

   <!-- The legacy JMX kernel -->
   <bean name="JMXKernel" class="org.jboss.system.server.jmx.JMXKernel">
      <property name="kernel"><inject bean="jboss.kernel:service=Kernel"/></property>
      <property name="serverImpl"><inject bean="JBossServer"/></property>
      <property name="oldClassLoader">false</property>
   </bean>


   <!-- Repository classloader -->
   <!--bean name="AOPClassLoaderScopingPolicy" class="org.jboss.aop.asintegration.jboss4.RepositoryClassLoaderScopingPolicy"/-->
   <!-- VFS ClassLoader -->
   <bean name="AOPClassLoaderScopingPolicy" class="org.jboss.aop.asintegration.jboss5.VFSClassLoaderScopingPolicy"/>

   <!-- Integration -->
   <bean name="AOPJBossIntegration" class="org.jboss.aop.asintegration.jboss5.JBoss5Integration">
      <property name="scopingPolicy"><inject bean="AOPClassLoaderScopingPolicy"/></property>
   </bean>
   <!--
      Valid values for the AspectManager bean for use with enableTransformer=true are:
      * org.jboss.aop.deployers.AspectManagerJDK5 - works with the -javaagent:pluggable-instrumentor.jar switch
      * org.jboss.aop.deployers.AspectManagerJRockit - works with JRockit and the -Xmanagement:class=org.jboss.aop.hook.JRockitPluggableClassPreProcessor switch
   -->
   <bean name="AspectManager" class="org.jboss.aop.deployers.AspectManagerJDK5">
      <constructor>
         <parameter><![CDATA[
	         <aop>
			      <aspect name="mainDeployer" class="org.jboss.profileservice.aop.MainDeployerAspect"/>
					   <bind pointcut="execution(* $instanceof{org.jboss.deployers.spi.deployment.MainDeployer}->process(..))">
				      <advice name="process" aspect="mainDeployer"/>
				   </bind>
					<aspect name="persist" class="org.jboss.profileservice.aop.PersistAspect"/>
					<bind pointcut="execution(* $instanceof{org.jboss.managed.api.ManagedProperty}->setValue(..))">
				      <advice name="setValue" aspect="persist"/>
				   </bind>
				</aop>]]>
	      </parameter>
      </constructor>

      <property name="jbossIntegration"><inject bean="AOPJBossIntegration"/></property>

      <property name="enableLoadtimeWeaving">false</property>
      <!-- only relevant when EnableLoadtimeWeaving is true.
           When transformer is on, every loaded class gets
           transformed.  If AOP can't find the class, then it
           throws an exception.  Sometimes, classes may not have
           all the classes they reference.  So, the Suppressing
           is needed.  (i.e. Jboss cache in the default configuration -->
      <property name="suppressTransformationErrors">true</property>
      <property name="prune">true</property>
      <property name="include">org.jboss.test., org.jboss.injbossaop.</property>
      <property name="exclude">org.jboss.</property>
      <!-- This avoids instrumentation of hibernate cglib enhanced proxies
      <property name="ignore">*$$EnhancerByCGLIB$$*</property> -->
      <property name="optimized">true</property>
      <property name="verbose">false</property>
      <!--
         Available choices for this attribute are:
            org.jboss.aop.instrument.ClassicInstrumentor (default)
            org.jboss.aop.instrument.GeneratedAdvisorInstrumentor
       <property name="instrumentor">org.jboss.aop.instrument.ClassicInstrumentor</property>
      -->
   </bean>

   <!-- The MainDeployer -->
   <bean name="MainDeployer" class="org.jboss.deployers.plugins.main.MainDeployerImpl">
      <property name="structuralDeployers"><inject bean="StructuralDeployers"/></property>
      <property name="deployers"><inject bean="Deployers"/></property>
      <property name="mgtDeploymentCreator"><inject bean="ManagedDeploymentCreator"/></property>
   </bean>

   <!-- The ManagedDeploymentCreator implementation -->
   <bean name="ManagedDeploymentCreator" class="org.jboss.deployers.plugins.managed.DefaultManagedDeploymentCreator" />

   <!-- The holder for deployers that determine structure -->
   <bean name="StructuralDeployers" class="org.jboss.deployers.vfs.plugins.structure.VFSStructuralDeployersImpl">
      <property name="structureBuilder">
         <!-- The consolidator of the structure information -->
         <bean name="StructureBuilder" class="org.jboss.deployers.vfs.plugins.structure.VFSStructureBuilder"/>
      </property>
      <!-- Accept any implementor of structure deployer -->
      <incallback method="addDeployer"/>
      <uncallback method="removeDeployer"/>
   </bean>

   <!-- The holder for deployers that do real deployment -->
   <bean name="Deployers" class="org.jboss.deployers.plugins.deployers.DeployersImpl">
      <constructor><parameter><inject bean="jboss.kernel:service=KernelController"/></parameter></constructor>
      <!-- Accept any implementor of deployer -->
      <incallback method="addDeployer"/>
      <uncallback method="removeDeployer"/>
   </bean>

   <!-- A declared structure descriptor deployer -->
   <bean name="DeclaredStructure" class="org.jboss.deployers.vfs.plugins.structure.explicit.DeclaredStructure"></bean>

   <!-- WAR Structure -->
   <bean name="WARStructure" class="org.jboss.deployers.vfs.plugins.structure.war.WARStructure">
       <property name="webInfLibFilter">
          <!-- We accept all .jar files in WEB-INF/lib -->
          <bean name="WebInfLibFilter" class="org.jboss.virtual.plugins.vfs.helpers.SuffixMatchFilter">
             <constructor><parameter class="java.lang.String">.jar</parameter></constructor>
          </bean>
       </property>
    </bean>

    <!-- JAR Structure -->
    <bean name="JARStructure" class="org.jboss.deployers.vfs.plugins.structure.jar.JARStructure">
       <!-- Unless specified the default list of suffixes is .zip, .ear, .jar, ,.rar, .war, .sar, .har, .aop -->
       <constructor>
          <parameter>
             <set elementClass="java.lang.String">
                <value>.zip</value>
                <value>.ear</value>
                <value>.jar</value>
                <value>.rar</value>
                <value>.war</value>
                <value>.sar</value>
                <value>.har</value>
                <value>.aop</value>
                <value>.deployer</value>
                <value>.beans</value>
             </set>
          </parameter>
       </constructor>
       <property name="candidateStructureVisitorFactory">
          <!-- Any file that is not an ordinary directory is a candidate -->
          <bean name="JARStructureCandidates" class="org.jboss.deployers.vfs.spi.structure.helpers.DefaultCandidateStructureVisitorFactory">
             <!-- A filter to exclude some obvious non-subdeployments -->
             <property name="filter">
                <bean name="JARFilter" class="org.jboss.virtual.plugins.vfs.helpers.SuffixesExcludeFilter">
                   <constructor><parameter>
                      <list elementClass="java.lang.String">
                         <!-- Exclude class files as subdeployments -->
                         <value>.class</value>
                      </list>
                   </parameter></constructor>
                </bean>
             </property>
          </bean>
       </property>
    </bean>

    <!-- File Structure -->
    <bean name="FileStructure" class="org.jboss.deployers.vfs.plugins.structure.file.FileStructure">
       <!-- Unless specified the default list of suffixes is -service.xml, -beans.xml, -ds.xml, -aop.xml -->
       <constructor>
          <parameter>
             <set elementClass="java.lang.String">
                <value>-service.xml</value>
                <value>-beans.xml</value>
                <value>-ds.xml</value>
                <value>-aop.xml</value>
             </set>
          </parameter>
       </constructor>
    </bean>

    <!-- AOP deployment -->
    <!-- FIXME Replace with org.jboss.aop.deployers.AspectAppParsingDeployer once AOP is released -->
    <bean name="AspectAppParsingDeployer" class="org.jboss.aop.asintegration.jboss5.AspectAppParsingDeployer"/>
    <bean name="AspectDeployer" class="org.jboss.aop.deployers.AspectDeployer">
       <property name="type">aop</property>
       <property name="aspectManager"><inject bean="AspectManager" property="aspectManager"/></property>
   </bean>

   <!-- POJO Deployment -->
   <bean name="BeanDeployer" class="org.jboss.deployers.vfs.deployer.kernel.BeanDeployer">
      <property name="type">beans</property>
   </bean>
   <bean name="KernelDeploymentDeployer" class="org.jboss.deployers.vfs.deployer.kernel.KernelDeploymentDeployer">
      <property name="type">beans</property>
   </bean>
   <!-- FIXME: Put back to BeanMetaDataDeployer once JBMICROCONT-234 has been added to trunk -->
   <bean name="BeanMetaDataDeployer" class="org.jboss.system.deployers.TempBeanMetaDataDeployer">
      <!--bean name="BeanMetaDataDeployer" class="org.jboss.deployers.vfs.deployer.kernel.BeanMetaDataDeployer"-->
      <constructor><parameter><inject bean="jboss.kernel:service=Kernel"/></parameter></constructor>
      <property name="type">beans</property>
   </bean>

   <!-- JMX Deployment -->
   <bean name="SARDeployer" class="org.jboss.system.deployers.SARDeployer">
      <property name="type">sar</property>
   </bean>
   <bean name="ServiceDeploymentDeployer" class="org.jboss.system.deployers.ServiceDeploymentDeployer">
       <property name="type">sar</property>
   </bean>
   <bean name="ServiceDeployer" class="org.jboss.system.deployers.ServiceDeployer">
       <constructor><parameter><inject bean="JMXKernel" property="serviceController"/></parameter></constructor>
       <property name="type">sar</property>
   </bean>

   <!-- UnifiedClassLoader -->
   <!--bean name="ServiceClassLoaderDeployer" class="org.jboss.system.deployers.ServiceClassLoaderDeployer">
      <constructor><parameter><inject bean="JMXKernel" property="serviceController"/></parameter></constructor>
   </bean-->

   <!-- VFS ClassLoader -->
   <bean name="ClassLoaderSystem" class="org.jboss.classloader.spi.ClassLoaderSystem">
      <constructor factoryClass="org.jboss.classloader.spi.ClassLoaderSystem" factoryMethod="getInstance"/>
   </bean>
   <bean name="ClassLoading" class="org.jboss.deployers.plugins.classloading.ClassLoading"/>
   <bean name="HackClassLoaderMetaDataDeployer" class="org.jboss.system.deployers.HackClassloaderMetaDataDeployer">
      <property name="classLoading"><inject bean="ClassLoading"/></property>
   </bean>
   <bean name="VFSClassLoaderDeployer" class="org.jboss.deployers.vfs.plugins.classloader.VFSTopLevelClassLoaderSystemDeployer">
      <property name="classLoading"><inject bean="ClassLoading"/></property>
      <property name="system"><inject bean="ClassLoaderSystem"/></property>
      <property name="mbeanServer"><inject bean="JMXKernel" property="mbeanServer"/></property>
   </bean>

	<!-- MBean for making sure that the underlying AspectManagerService gets registered in JMX -->
	<bean name="AspectManagerJMXRegistrar" class="org.jboss.aop.deployers.AspectManagerJMXRegistrar">
	   <property name="mbeanServer"><inject bean="JMXKernel" property="mbeanServer"/></property>
	   <property name="aspectManager"><inject bean="AspectManager"/></property>
	</bean>

   <!-- A filter for excluding files from the scanner -->
   <bean name="DeploymentFilter" class="org.jboss.virtual.plugins.vfs.helpers.ExtensibleFilter">
      <!-- Files starting with theses strings are ignored -->
      <property name="prefixes">#,%,\,,.,_$</property>
      <!-- Files ending with theses strings are ignored -->
      <property name="suffixes">#,$,%,~,\,v,.BAK,.bak,.old,.orig,.tmp,.rej,.sh</property>
      <!-- Files matching with theses strings are ignored -->
      <property name="matches">.make.state,.nse_depinfo,CVS,CVS.admin,RCS,RCSLOG,SCCS,TAGS,core,tags</property>
   </bean>

   <!-- Scan for bootstraps -->
   <bean name="VFSBootstrapScanner" class="org.jboss.system.server.profileservice.VFSBootstrapScannerImpl">
      <property name="profileService"><inject bean="ProfileService"/></property>
      <property name="filterInstance"><inject bean="DeploymentFilter"/></property>
      <property name="URIList">
         <list elementClass="java.net.URI">
            <!-- Legacy static conf/jboss-service.xml -->
            <value>${jboss.server.home.url}conf/jboss-service.xml</value>
         </list>
      </property>
   </bean>

   <!-- Scan for deployers -->
   <bean name="VFSDeployerScanner" class="org.jboss.system.server.profileservice.VFSDeployerScannerImpl">
      <property name="profileService"><inject bean="ProfileService"/></property>
      <property name="filterInstance"><inject bean="DeploymentFilter"/></property>
      <property name="URIList">
         <list elementClass="java.net.URI">
            <!-- Directory for deployers -->
            <value>@cargo.jboss.deployers.url@</value>
         </list>
      </property>
   </bean>

   <!-- Scan for applications -->
   <bean name="VFSDeploymentScanner" class="org.jboss.system.server.profileservice.VFSDeploymentScannerImpl">
      <property name="profileService"><inject bean="ProfileService"/></property>
      <property name="filterInstance"><inject bean="DeploymentFilter"/></property>
      <property name="URIList">
         <list elementClass="java.net.URI">
            <!-- Standard hot deployment directory -->
            <value>${jboss.server.home.url}/deploy/</value>
            <value>@cargo.jboss.deploy.url@</value>
         </list>
      </property>
   </bean>

   <!-- Hotdeployment of applications -->
   <bean name="HDScanner"
      class="org.jboss.system.server.profileservice.hotdeploy.HDScanner">
      <property name="mainDeployer"><inject bean="MainDeployer"/></property>
      <!-- Workaround for JBMICROCONT-176
      -->
      <property name="controller"><inject bean="jboss.kernel:service=KernelController"/></property>
      <!-- Broken due to JBMICROCONT-176
         <property name="controller"><inject bean="jboss.kernel:service=Kernel" property="controller"/></property>
      -->
      <property name="profileService"><inject bean="ProfileService"/></property>
      <property name="scanPeriod">5000</property>
      <property name="scanThreadName">HDScanner</property>
   </bean>
</deployment>
