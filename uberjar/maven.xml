<?xml version="1.0"?>
<project default="cargo:dist"
    xmlns:u="jelly:util"
    xmlns:ant="jelly:ant"
  	xmlns:j="jelly:core"
    xmlns:artifact="artifact"
    xmlns:maven="jelly:maven">

  <goal name="cargo:dist">
    <ant:mkdir dir="${maven.build.dir}"/>

    <!-- Note: We could define the jar files to include in the distribution zip in this project's
         POM and then use ${pom.getDependencyPath(...)} to get the paths to the jars. However,
         this would mean that the published POM will get private dependencies. Thus we use
         relative paths instead. In any case this will disappear with Maven 2. -->

    <maven:pom var="coreUtilPom" projectDescriptor="${basedir}/../api/util/project.xml"/>
    <maven:pom var="coreModulePom" projectDescriptor="${basedir}/../api/module/project.xml"/>
    <maven:pom var="coreContainerPom" projectDescriptor="${basedir}/../api/container/project.xml"/>
    <maven:pom var="coreGenericPom" projectDescriptor="${basedir}/../api/generic/project.xml"/>

    <maven:pom var="coreGeronimoPom" projectDescriptor="${basedir}/../containers/geronimo/project.xml"/>
    <maven:pom var="coreJBossPom" projectDescriptor="${basedir}/../containers/jboss/project.xml"/>
    <maven:pom var="coreJettyPom" projectDescriptor="${basedir}/../containers/jetty/project.xml"/>
    <maven:pom var="coreJoPom" projectDescriptor="${basedir}/../containers/jo/project.xml"/>
    <maven:pom var="coreOrionPom" projectDescriptor="${basedir}/../containers/orion/project.xml"/>
    <maven:pom var="coreResinPom" projectDescriptor="${basedir}/../containers/resin/project.xml"/>
    <maven:pom var="coreTomcatPom" projectDescriptor="${basedir}/../containers/tomcat/project.xml"/>
    <maven:pom var="coreWebLogicPom" projectDescriptor="${basedir}/../containers/weblogic/project.xml"/>

    <ant:jar destfile="${maven.build.dir}/${maven.final.name}.jar">
      <!-- TODO: I've hardcoded the maven/ extra path below because in Maven 1.0.2 the maven:pom
           does not support inheritance. It is supported by maven 1.1 beta 2 and above though. Fix
           this when we move to Maven 1.1 final or Maven 2.0 -->
      <ant:zipfileset src="${coreUtilPom.context.getVariable('maven.build.dir')}/${coreUtilPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
      <ant:zipfileset src="${coreModulePom.context.getVariable('maven.build.dir')}/${coreModulePom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
      <ant:zipfileset src="${coreContainerPom.context.getVariable('maven.build.dir')}/${coreContainerPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
      <ant:zipfileset src="${coreGenericPom.context.getVariable('maven.build.dir')}/${coreGenericPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>

      <ant:zipfileset src="${coreGeronimoPom.context.getVariable('maven.build.dir')}/${coreGeronimoPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
      <ant:zipfileset src="${coreJBossPom.context.getVariable('maven.build.dir')}/${coreJBossPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
      <ant:zipfileset src="${coreJettyPom.context.getVariable('maven.build.dir')}/${coreJettyPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
      <ant:zipfileset src="${coreJoPom.context.getVariable('maven.build.dir')}/${coreJoPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
      <ant:zipfileset src="${coreOrionPom.context.getVariable('maven.build.dir')}/${coreOrionPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
      <ant:zipfileset src="${coreResinPom.context.getVariable('maven.build.dir')}/${coreResinPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
      <ant:zipfileset src="${coreTomcatPom.context.getVariable('maven.build.dir')}/${coreTomcatPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
      <ant:zipfileset src="${coreWebLogicPom.context.getVariable('maven.build.dir')}/${coreWebLogicPom.context.getVariable('maven.final.name')}${pom.currentVersion}.jar"/>
    </ant:jar>

    <!-- Install the project-for-deployment.xml POM -->
    <maven:pom var="installPom" projectDescriptor="${basedir}/project-for-deployment.xml"/>

    <artifact:install
      artifact="${maven.build.dir}/${maven.final.name}.jar"
      type="jar"
      project="${installPom}"/>

  </goal>

  <goal name="cargo:deploy" prereqs="cargo:dist">

    <!-- Deploy the project-for-deployment.xml POM -->
    <maven:pom var="deployPom" projectDescriptor="${basedir}/project-for-deployment.xml"/>

    <artifact:deploy
      artifact="${maven.build.dir}/${maven.final.name}.jar"
      type="jar"
      project="${deployPom}"/>

  </goal>

</project>
