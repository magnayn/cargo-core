<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-core</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <artifactId>cargo-samples</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Cargo Samples</name>
  <description>Samples that exercises the Cargo Java APIs</description>
  <!-- to get access to test fixtures -->
  <dependencies>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-container</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
    </dependency>

    <!-- TODO: We would like to depend only on the aggregated core jar but this feature is not yet
         available in Maven2. Refactor when it is -->
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-generic</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Container dependencies (in alphabetical order) -->
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-geronimo</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-jboss</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-jetty</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-jo</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-jonas</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-orion</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-resin</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-tomcat</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-container-weblogic</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Test data artifacts -->
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>simple-war</artifactId>
      <version>${cargo.resources.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>datasource-war</artifactId>
      <version>${cargo.resources.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>two-datasources-war</artifactId>
      <version>${cargo.resources.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>xadatasource-war</artifactId>
      <version>${cargo.resources.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>datasource-cmt-local-war</artifactId>
      <version>${cargo.resources.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>classpath-war</artifactId>
      <version>${cargo.resources.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>simple-ejb</artifactId>
      <version>${cargo.resources.version}</version>
      <type>ejb</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>expanded-war</artifactId>
      <version>${cargo.resources.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>authentication-war</artifactId>
      <version>${cargo.resources.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>tomcatcontext-war</artifactId>
      <version>${cargo.resources.version}</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>simple-ear</artifactId>
      <version>${cargo.resources.version}</version>
      <type>ear</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>empty-ear</artifactId>
      <version>${cargo.resources.version}</version>
      <type>ear</type>
    </dependency>

  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.4.3</version>
      </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.4.3</version>
          <configuration>

            <childDelegation>${surefire.childDelegation}</childDelegation>
            <useManifestOnlyJar>${surefire.useManifestOnlyJar}</useManifestOnlyJar>
            <useSystemClassLoader>${surefire.useSystemClassLoader}</useSystemClassLoader>

            <forkMode>pertest</forkMode>
            <useFile>true</useFile>
            <reportFormat>plain</reportFormat>

            <systemProperties>

              <!-- 
                Surefire 2.4.3 requires you to pass properties explicitly.
                
                If you're behind a proxy, set this here

              <property>
                <name>http.proxyHost</name>
                <value>proxy</value>
              </property>
              -->

              <!-- pass locations of java homes to the test classes so that they can 
                   look them up and determine if a container is running on jdk 1.4, 
                   1.5, etc. --> 
              <property>
                <name>cargo.java.home.1_4</name>
                <value>${cargo.java.home.1_4}</value>
              </property>
              <property>
                <name>cargo.java.home.1_5</name>
                <value>${cargo.java.home.1_5}</value>
              </property>
              <property>
                <name>cargo.java.home.1_6</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <!-- set default parser -->
              <property>
                <name>javax.xml.parsers.SAXParserFactory</name>
                <value>${javax.xml.parsers.SAXParserFactory}</value>
              </property>

              <!--
                Default locations from where to get the container installation files. If you
                wish to use a version already downloaded on your filesystem, use the
                "file:///" prefix instead of "http://".
                For example: file:///c:/apps/resin-3.0.19.zip
                If you wish to use an already installed container, set the
                "cargo.[container name].home" property in your settings.xml file.
                For example: c:/apps/resin-3.0.19
                -->

              <property>
                <name>cargo.resin2x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.resin2x.url</name>
                <value>http://www.caucho.com/download/resin-2.1.17.zip</value>
              </property>
              <property>
                <name>cargo.resin2x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>
              
              <property>
                <name>cargo.resin3x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.resin3x.url</name>
                <value>http://www.caucho.com/download/resin-3.0.27.zip</value>
              </property>
              <property>
                <name>cargo.resin3x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.tomcat4x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.tomcat4x.url</name>
                <!-- note that we want the larger download (not LE), as it contains dbcp needed for database tests -->
                <value>http://mirror.lividpenguin.com/pub/apache/tomcat/tomcat-4/v4.1.39/bin/apache-tomcat-4.1.39.zip</value>
              </property>
              <property>
                <name>cargo.tomcat4x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.tomcat5x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.tomcat5x.url</name>
                <value>http://www.smudge-it.co.uk/pub/apache/tomcat/tomcat-5/v5.5.27/bin/apache-tomcat-5.5.27.zip</value>
              </property>
              <property>
                <name>cargo.tomcat5x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.tomcat6x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.tomcat6x.url</name>
                <value>http://www.smudge-it.co.uk/pub/apache/tomcat/tomcat-6/v6.0.18/bin/apache-tomcat-6.0.18.zip</value>
              </property>
              <property>
                <name>cargo.tomcat6x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jetty4x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.jetty4x.url</name>
                <value>http://dist.codehaus.org/jetty/jetty-4.2.x/jetty-4.2.27.zip</value>
              </property>
              <property>
                <name>cargo.jetty4x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.jetty5x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.jetty5x.url</name>
                <value>http://dist.codehaus.org/jetty/jetty-5.1.x/jetty-5.1.14.tgz</value>
              </property>
              <property>
                <name>cargo.jetty5x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.jetty6x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.jetty6x.url</name>
                <value>http://dist.codehaus.org/jetty/jetty-6.1.14/jetty-6.1.14.zip</value>
              </property>
              <property>
                <name>cargo.jetty6x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jetty7x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.jetty7x.url</name>
                <value>http://dist.codehaus.org/jetty/jetty-7.0.0-prereleases/jetty-7.0.0pre3/jetty-assembly-7.0.0pre3.zip</value>
              </property>
              <property>
                <name>cargo.jetty7x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.geronimo1x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.geronimo1x.url</name>
                <value>http://archive.eu.apache.org/dist/geronimo/1.1.1/geronimo-jetty-j2ee-1.1.1.zip</value>
              </property>
              <property>
                <name>cargo.geronimo1x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <!--
                WebLogic 8.x

                Notes: 
                
                WebLogic 8.1SP6 and below only run on JDK 1.4
                
                There is no non-interactive download link for WL 8.x.  Here is a link that requires license agreement:
                   * http://commerce.bea.com/showproduct.jsp?family=WLS&major=8.1&minor=6
 
                Once you install this, set the cargo.weblogic8x.home property accordingly.
                
                For example:

                  <property>
                    <name>cargo.weblogic8x.home</name>
                    <value>c:/bea/weblogic81</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic8x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.weblogic8x.home</name>
                <value>${cargo.weblogic8x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic8x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <!--
                WebLogic 9.x

                Notes: 
                
                WebLogic 9.2MP3 and below only run on JDK 1.5
                
                There is no non-interactive download link for WL 9.x.  Here are links that require license agreement:
                   * http://commerce.bea.com/showproduct.jsp?family=WLS&major=9.2&minor=3
                   * http://www.oracle.com/technology/software/products/ias/htdocs/wls_main.html

                Once you install this, set the cargo.weblogic9x.home property accordingly.
                
                For example:

                  <property>
                    <name>cargo.weblogic9x.home</name>
                    <value>c:/bea/weblogic92</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic9x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.weblogic9x.home</name>
                <value>${cargo.weblogic9x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic9x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <!--
                WebLogic 10.x

                Notes: 
                
                WebLogic 10.0MP1 and below only run on JDK 1.5
                
                There is no non-interactive download link for WL 10.x.  Here are links that require license agreement:
                   * http://commerce.bea.com/showallversions.jsp?family=WLS
                   * http://www.oracle.com/technology/software/products/ias/htdocs/wls_main.html

                Once you install this, set the cargo.weblogic10x.home property accordingly.
                
                For example:

                  <property>
                    <name>cargo.weblogic10x.home</name>
                    <value>c:/bea/wlserver_10.0</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic10x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.weblogic10x.home</name>
                <value>${cargo.weblogic10x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic10x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <!--
                WebLogic 10.3x

                Notes: 
                
                WebLogic 10.3 only runs on JDK 1.6
                
                There is no non-interactive download link for WL 10.3x.  Here is is a link that requires license agreement:
                   * http://www.oracle.com/technology/software/products/ias/htdocs/wls_main.html

                Once you install this, set the cargo.weblogic10x.home property accordingly.
                
                For example:

                  <property>
                    <name>cargo.weblogic103x.home</name>
                    <value>c:/bea/wlserver_10.3</value>
                  </property>
                -->
              <property>
                <name>cargo.weblogic103x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.weblogic103x.home</name>
                <value>${cargo.weblogic103x.home}</value>
              </property>
              <property>
                <name>cargo.weblogic103x.java.home</name>
                <value>${cargo.java.home.1_6}</value>
              </property>

              <!--
                OC4J 9.x

                Notes: 
                
                OC4J 9.0.4 runs on JDK 1.3.1+
                
                There is no non-interactive download link for OC4J 9.x.  Here is a link that requires license agreement:
                   * http://www.oracle.com/technology/software/products/ias/htdocs/utilsoft.html

                Download the zip and extract it to a directory corresponding with the cargo.oc4j9x.home property.
                
                For example:

                  <property>
                    <name>cargo.oc4j9x.home</name>
                    <value>c:/oracle/oc4j_extended_904</value>
                  </property>
                -->
              <property>
                <name>cargo.oc4j9x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.oc4j9x.home</name>
                <value>${cargo.oc4j9x.home}</value>
              </property>
              <property>
                <name>cargo.oc4j9x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <!--
                OC4J 10.x

                Notes: 
                
                OC4J 10.1.2.0.2 runs on JDK 1.4+
                     10.1.3.3.0 runs on JDK 1.4.2+
                     10.1.3.4.0 runs on JDK 1.4.2+

                We recommend setting this to a JDK 5.
                
                There is no non-interactive download link for OC4J 10.x.  Here is a link that requires license agreement:
                   * http://www.oracle.com/technology/software/products/ias/htdocs/utilsoft.html

                Download the zip and extract it to a directory corresponding with the cargo.oc4j10x.home property.
                
                For example:

                  <property>
                    <name>cargo.oc4j10x.home</name>
                    <value>c:/oracle/oc4j_extended_101340</value>
                  </property>
                -->
              <property>
                <name>cargo.oc4j10x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.oc4j10x.home</name>
                <value>${cargo.oc4j10x.home}</value>
              </property>
              <property>
                <name>cargo.oc4j10x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jo1x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.jo1x.url</name>
                <value>http://www.tagtraum.com/download/jo1.1beta1.zip</value>
              </property>
              <property>
                <name>cargo.jo1x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.jboss3x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.jboss3x.url</name>
                <value>http://ovh.dl.sourceforge.net/sourceforge/jboss/jboss-3.2.8.SP1.zip</value>
              </property>
              <property>
                <name>cargo.jboss3x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>

              <property>
                <name>cargo.jboss4x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.jboss4x.url</name>
                <value>http://downloads.sourceforge.net/jboss/jboss-4.0.5.GA.zip?big_mirror=1</value>
              </property>
              <property>
                <name>cargo.jboss4x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jboss42x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.jboss42x.url</name>
                <value>http://downloads.sourceforge.net/jboss/jboss-4.2.2.GA.zip?big_mirror=1</value>
              </property>
              <property>
                <name>cargo.jboss42x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jboss5x.port</name>
                <value>8080</value>
              </property>
              <property>
                <name>cargo.jboss5x.url</name>
                <value>http://downloads.sourceforge.net/jboss/jboss-5.0.0.GA.zip?big_mirror=1</value>
              </property>
              <property>
                <name>cargo.jboss5x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>

              <property>
                <name>cargo.jonas4x.url</name>
                <value>http://download.fr.forge.objectweb.org/jonas/jonas4.10.1-tomcat5.5.26.tgz</value>
              </property>
              <property>
                <name>cargo.jonas4x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.jonas4x.java.home</name>
                <value>${cargo.java.home.1_4}</value>
              </property>
              <!-- additional required properties to make the samples work correctly -->
              <property>
                <name>cargo.jonas4x.configuration.cargo.jonas.realm.name</name>
                <value>Cargo Test Realm</value>
              </property>
              <property>
                <name>cargo.jonas4x.configuration.cargo.jonas.remote.deployer.skip.module.removal</name>
                <value>true</value>
              </property>
              <property>
                <name>cargo.jonas4x.configuration.cargo.remote.username</name>
                <value>jonas</value>
              </property>
              <property>
                <name>cargo.jonas4x.configuration.cargo.remote.password</name>
                <value>jonas</value>
              </property>

              <property>
                <name>cargo.jonas5x.url</name>
                <value>http://download.fr.forge.objectweb.org/jonas/jonas-osgi-5.0.4-bin.tar.gz</value>
              </property>
              <property>
                <name>cargo.jonas5x.port</name>
                <value>${cargo.samples.port}</value>
              </property>
              <property>
                <name>cargo.jonas5x.java.home</name>
                <value>${cargo.java.home.1_5}</value>
              </property>
              <!-- additional required properties to make the samples work correctly -->
              <property>
                <name>cargo.jonas5x.configuration.cargo.jonas.realm.name</name>
                <value>Cargo Test Realm</value>
              </property>
              <property>
                <name>cargo.jonas5x.configuration.cargo.jonas.remote.deployer.skip.module.removal</name>
                <value>true</value>
              </property>
              <property>
                <name>cargo.jonas5x.configuration.cargo.remote.username</name>
                <value>jonas</value>
              </property>
              <property>
                <name>cargo.jonas5x.configuration.cargo.remote.password</name>
                <value>jonas</value>
              </property>

              <!--
                If you're behind a proxy, you can define the following properties in your
                settings.xml file:

                  <property>
                    <name>cargo.proxy.host</name>
                    <value>[proxy host]</value>
                  </property>
                  <property>
                    <name>cargo.proxy.port</name>
                    <value>[proxy port]</value>
                  </property>
                  <property>
                    <name>cargo.proxy.user</name>
                    <value>[proxy user (if any)]</value>
                  </property>
                  <property>
                    <name>cargo.proxy.password</name>
                    <value>[proxy password (if any)]</value>
                  </property>
                  <property>
                    <name>cargo.proxy.excludehosts</name>
                    <value>
                      [A list of hosts to bypass the proxy on (if any). These should be
                      separated with the vertical bar character '|'. Only in Java 1.4 does ftp use
                      this list. e.g. fozbot.corp.sun.com|*.eng.sun.com]
                    </value>
                  </property>
              -->

              <property>
                <name>cargo.target.dir</name>
                <value>${basedir}/target</value>
                <!--value>${project.build.directory}</value-->
              </property>

              <!--
                Location of testdata dependencies used by the tests. These paths are relative to
                the local Maven repository.
                -->
              <property>
                <name>cargo.testdata.empty-ear</name>
                <value>org/codehaus/cargo/empty-ear/${cargo.resources.version}/empty-ear-${cargo.resources.version}.ear</value>
              </property>
              <property>
                <name>cargo.testdata.authentication-war</name>
                <value>org/codehaus/cargo/authentication-war/${cargo.resources.version}/authentication-war-${cargo.resources.version}.war</value>
              </property>
              <property>
                <name>cargo.testdata.expanded-war</name>
                <value>org/codehaus/cargo/expanded-war/${cargo.resources.version}/expanded-war-${cargo.resources.version}.war</value>
              </property>
              <property>
                <name>cargo.testdata.simple-ear</name>
                <value>org/codehaus/cargo/simple-ear/${cargo.resources.version}/simple-ear-${cargo.resources.version}.ear</value>
              </property>
              <property>
                <name>cargo.testdata.simple-war</name>
                <value>org/codehaus/cargo/simple-war/${cargo.resources.version}/simple-war-${cargo.resources.version}.war</value>
              </property>
              <property>
                <name>cargo.testdata.datasource-war</name>
                <value>org/codehaus/cargo/datasource-war/${cargo.resources.version}/datasource-war-${cargo.resources.version}.war</value>
              </property>
              <property>
                <name>cargo.testdata.two-datasources-war</name>
                <value>org/codehaus/cargo/two-datasources-war/${cargo.resources.version}/two-datasources-war-${cargo.resources.version}.war</value>
              </property>
              <property>
                <name>cargo.testdata.xadatasource-war</name>
                <value>org/codehaus/cargo/xadatasource-war/${cargo.resources.version}/xadatasource-war-${cargo.resources.version}.war</value>
              </property>
              <property>
                <name>cargo.testdata.datasource-cmt-local-war</name>
                <value>org/codehaus/cargo/datasource-cmt-local-war/${cargo.resources.version}/datasource-cmt-local-war-${cargo.resources.version}.war</value>
              </property>
              <property>
                <name>cargo.testdata.classpath-war</name>
                <value>org/codehaus/cargo/classpath-war/${cargo.resources.version}/classpath-war-${cargo.resources.version}.war</value>
              </property>
              <property>
                <name>cargo.testdata.simple-ejb</name>
                <value>org/codehaus/cargo/simple-ejb/${cargo.resources.version}/simple-ejb-${cargo.resources.version}.jar</value>
              </property>
              <property>
                <name>cargo.testdata.tomcatcontext-war</name>
                <value>org/codehaus/cargo/tomcatcontext-war/${cargo.resources.version}/tomcatcontext-war-${cargo.resources.version}.war</value>
              </property>
              <property>
                <name>cargo.testdata.derby-jar</name>
                <value>${basedir}/target/test-jars/derby.jar</value>
              </property>
              <property>
                <name>cargo.testdata.xerces-jars</name>
                <value>${basedir}/target/xerces-jars</value>
              </property>

              <!-- Version used to compute the location of the test data files in the local Maven
                   repository. -->
              <property>
                <name>cargo.version</name>
                <value>1.0-SNAPSHOT</value>
              </property>

              <property>
                <name>cargo.containers.timeout</name>
                <value>${cargo.containers.timeout}</value>
              </property>

              <!-- Location where to download and install the containers for the tests -->
              <property>
                <name>cargo.install.dir</name>
                <value>${cargo.install.dir}</value>
              </property>

              <!-- Default list of containers to run on. If you want to shorten or change the
                   execution of 'samples', simply specify a shorter list of containers on the
                   command line or in your settings -->
              <property>
                <name>cargo.containers</name>
                <value>${cargo.containers}</value>
              </property>

            </systemProperties>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <!-- Copy the designated jdbc driver to an area where the containers can reference 
                 it -->
            <phase>process-test-resources</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.derby</groupId>
                  <artifactId>derby</artifactId>
                  <version>${cargo.derby.version}</version>
                  <outputDirectory>${basedir}/target/test-jars</outputDirectory>
                  <destFileName>derby.jar</destFileName>
                </artifactItem>
                <!-- to allow jdk 1.4 containers to parse schema files -->
                <artifactItem>
                  <groupId>xerces</groupId>
                  <artifactId>xercesImpl</artifactId>
                  <version>2.9.1</version>
                  <outputDirectory>${basedir}/target/xerces-jars</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>xml-apis</groupId>
                  <artifactId>xml-apis</artifactId>
                  <version>1.3.04</version>
                  <outputDirectory>${basedir}/target/xerces-jars</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <modules>
    <module>java</module>
  </modules>

  <properties>
    <!-- By default, only test on Jetty 6 on port 8285 -->
    <cargo.containers>jetty6x</cargo.containers>
    <cargo.samples.port>8285</cargo.samples.port>
    <!-- default from surefire -->
    <surefire.childDelegation>false</surefire.childDelegation>
    <surefire.useManifestOnlyJar>true</surefire.useManifestOnlyJar>
    <surefire.useSystemClassLoader>true</surefire.useSystemClassLoader>
    <cargo.install.dir>${java.io.tmpdir}/cargo/installs</cargo.install.dir>
    <!-- Tomcat 5x requires this setting for the embedded tests -->
    <!-- TODO: fix embedded tests and remove the SAXParserFactory property -->
    <javax.xml.parsers.SAXParserFactory>com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl</javax.xml.parsers.SAXParserFactory>
    <cargo.java.home.1_4>${java.home}</cargo.java.home.1_4>
    <cargo.java.home.1_5>${java.home}</cargo.java.home.1_5>
    <cargo.java.home.1_6>${java.home}</cargo.java.home.1_6>
    <cargo.containers.timeout>120000</cargo.containers.timeout>
    <cargo.derby.version>10.4.2.0</cargo.derby.version>
   </properties>
  <profiles>

    <profile>
      <!-- Java 4 doesn't have com.sun.org.apache.xerces.internal -->
      <id>java-1.4-setup-xerces</id>
      <activation>
        <jdk>1.4</jdk>
      </activation>
      <dependencies>
        <dependency>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
          <version>2.9.1</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <properties>
        <!-- childDelegation needed in jdk4 or else xml parser won't be found in the classpath -->
        <surefire.childDelegation>true</surefire.childDelegation>
        <surefire.useManifestOnlyJar>true</surefire.useManifestOnlyJar>
        <surefire.useSystemClassLoader>false</surefire.useSystemClassLoader>
        <javax.xml.parsers.SAXParserFactory>org.apache.xerces.jaxp.SAXParserFactoryImpl</javax.xml.parsers.SAXParserFactory>
      </properties>
    </profile>

    <profile>
      <!-- Set different port numbers for different JDKs (Codehaus CI-specific) -->
      <id>java-1.4</id>
      <activation>
        <jdk>1.4</jdk>
      </activation>
      <properties>
         <!-- If on Java 4, test on port 8284 -->
        <cargo.samples.port>8284</cargo.samples.port>
      </properties>
    </profile>
    <profile>
      <!-- All containers for the CI -->
      <id>all-ci</id>
      <properties>
        <cargo.containers>resin3x, tomcat5x, tomcat6x, jetty6x, jboss42x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <!-- All unstable containers -->
      <id>all-unstable-downloadable</id>
      <properties>
        <cargo.containers>geronimo1x, jetty7x,  jboss5x, jonas5x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <!-- All stable containers -->
      <id>all-stable-downloadable</id>
      <properties>
        <cargo.containers>resin2x, resin3x, tomcat4x,tomcat5x, tomcat6x,  jetty4x, jetty5x, jetty6x, jboss3x, jboss4x, jboss42x, jo1x, jonas4x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <!-- All containers for the CI in Java 4 -->
      <id>all-ci-java-1.4</id>
      <properties>
        <cargo.containers>resin2x, tomcat4x, jetty4x, jetty5x, jboss3x, jboss4x,  jo1x, jonas4x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <!-- All containers that have a distribution which can be downloaded automatically -->
      <id>all-downloadable</id>
      <properties>
        <cargo.containers>resin2x, resin3x, tomcat4x, tomcat5x, tomcat6x, jetty4x, jetty5x, jetty6x, jetty7x, geronimo1x, jboss3x, jboss4x, jboss42x, jboss5x, jo1x, jonas4x, jonas5x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>all-datasource</id>
      <properties>
        <cargo.containers>resin2x, resin3x, oc4j9x, tomcat4x, tomcat5x, tomcat6x, weblogic8x, weblogic9x, weblogic10x, weblogic103x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>all-orion</id>
      <properties>
        <cargo.containers>oc4j9x, oc4j10x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>oc4j9x</id>
      <properties>
        <cargo.containers>oc4j9x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>oc4j10x</id>
      <properties>
        <cargo.containers>oc4j10x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>all-resin</id>
      <properties>
        <cargo.containers>resin2x,resin3x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>resin2x</id>
      <properties>
        <cargo.containers>resin2x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>resin3x</id>
      <properties>
        <cargo.containers>resin3x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>all-tomcat</id>
      <properties>
        <cargo.containers>tomcat4x, tomcat5x, tomcat6x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomcat4x</id>
      <properties>
        <cargo.containers>tomcat4x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomcat5x</id>
      <properties>
        <cargo.containers>tomcat5x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>tomcat6x</id>
      <properties>
        <cargo.containers>tomcat6x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jetty4x</id>
      <properties>
        <cargo.containers>jetty4x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jetty5x</id>
      <properties>
        <cargo.containers>jetty5x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jetty6x</id>
      <properties>
        <cargo.containers>jetty6x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jetty7x</id>
      <properties>
        <cargo.containers>jetty7x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jboss3x</id>
      <properties>
        <cargo.containers>jboss3x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jboss4x</id>
      <properties>
        <cargo.containers>jboss4x</cargo.containers>
      </properties>
    </profile>
    <profile>
       <id>jboss42x</id>
       <properties>
         <cargo.containers>jboss42x</cargo.containers>
       </properties>
    </profile>
    <profile>
       <id>jboss5x</id>
       <properties>
         <cargo.containers>jboss5x</cargo.containers>
       </properties>
    </profile>
    <profile>
      <id>jo1x</id>
      <properties>
        <cargo.containers>jo1x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jonas4x</id>
      <properties>
        <cargo.containers>jonas4x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>jonas5x</id>
      <properties>
        <cargo.containers>jonas5x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic8x</id>
      <properties>
        <cargo.containers>weblogic8x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic9x</id>
      <properties>
        <cargo.containers>weblogic9x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic10x</id>
      <properties>
        <cargo.containers>weblogic10x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>weblogic103x</id>
      <properties>
        <cargo.containers>weblogic103x</cargo.containers>
      </properties>
    </profile>
    <profile>
      <id>all-weblogic</id>
      <properties>
        <cargo.containers>weblogic8x, weblogic9x, weblogic10x, weblogic103x</cargo.containers>
      </properties>
    </profile>
  </profiles>
</project>
